경로 : http://egloos.zum.com/histLinux/v/1246746

값 객체(Value Object)는 개념적으로는 아주 작고 단순한 객체이다. 
하지만 도메인 지향 디자인(Domain-Driven Design)과 객체지향 프로그래밍의 필수적인 요소이다.

값 객체는 두개의 값 객체의 동일성(equality) 은 Identity에 기반하지 않고 그들의 컨텐츠로 한다로 정의된다. 
(the equality of two Value Object is not based on identity)

Identity 와 equality

PHP에서는 '동일성'에 대한 연산자가 두개 있다. '==' 와 '===' 이다. 
'=='는 equality 테스팅을 위한 것인데 스칼라(scalar)나 문자열 혹은 정수형에 값이 같은지를 체크하는 연산자이다. 
반면에 '==='는 두 객체를 사용하고 있을때에 두 객체가 실제로 같은지에 대한 것을 판별해준다.
두 객체가 같다는 말은 같은 메모리 위치를 공유한다는 것이고 
한쪽 객체에서 어떤 연산으로 객체의 값을 바꾸면 다른 객체에도 영향을 미친다는 뜻이다.

이제 실제로 예를 들어서 설명을 해보자.

만일 두 사람이 같다면, 메모리 그래프에서, 단일 메모리 위치측면에서 같은 객체가 존재한다는 것이다. 
만일 데이터베이스라면 두 사람를 명확하게 구분하기위해서 Identity 필드를 가지고 있어야 한다.

만일 데이터베이스에서 당신과 내가 같은 이름, 같은 주소를 가지고 있다고 하더라도 아직 우리는 같은 사람이 아니다. 
그런데, 두 사람이 같은 날짜를 가지고 있고 같은 달, 같은 년도를 가진다면 두 사람은 같은 사람이다. 

후자(각 필드들이 값이 정확히 같다) 객체가, Identity 필드를 기반으로 하지 않는 동일성 판단, 값 객체이다.

PHP 5에서 값객체 패턴의 기본은 다음과 같다.

Protect the attributes of a Value Object so direct access is forbidden.
Set the object’s attributes in the constructor.
Provide no “setter” functions, which otherwise allow attributes to be altered.
이 3단계로 인해서 변경할수 없는 값이 생성된다. 
물론 'getters' 나 값객체 속성에 접근할 수 있는 메소드, 클래스와 관련된 어떤 함수를 제공 할 수 있다. 


값 객체에 대한 요약(출처: http://c86j224s.springnote.com/pages/5773683).

값 객체 패턴은, 객체를 마치 값처럼 사용하는 것이다. 
값 5에 또다른 값 5를 더하는 오퍼레이션을 실행하면, 
5가 10으로 변하는 것이 아니라 10이라는 새로운 값이 만들어지는 것처럼, 
값 객체 패턴에서도 값 객체에 어떤 오퍼레이션을 가하면, 
그 값 객체가  변하는 것이 아니라 새로운 값 객체를 리턴하게 된다.
값 객체의 제약사항은, 어떠한 오퍼레이션으로 그 값 객체를 변화시킬 수 없고, 
대신 새로운 값 객체를 생성하여 리턴시켜야 한다는 것이다.
값 객체의 모든 메소드는 새로운 값 객체를 리턴해야한다.
값 객체를 사용하면, 객체의 참조 문제가 해결될 수 있다. 
참조변수 A와 B가 a라는 객체를 참조하고 있을 때, B에 조작 연산을 가하여도, A에는 아무런 변화가 생기지 않는다.
------
첨부파일: ValueObjectPattern.zip (PHP Architects Guide to PHP Design Patterns 책에 예제)

BadDollarTest 케이스를 실행시켜보고 $pOne, $pTwo 의 값이 변화를 관찰해야 한다. 
그리고 DollarTest 케이스를 실행시켜봄으로서 이전과 무엇이 다른지를 파악해보자.

Monopoly 의 소스를 보고 어떻게 활용되는지도 살펴보자.
